import json</br>from collections import defaultdict\nfrom http import HTTPStatus\nimport pymongo as pymongo\nimport urllib.parse\nimport logging\nimport requests\nfrom pymongo import database, MongoClient\n\nerror_codes = {\n\n    1003: \"Connection Not Established\",\n    1006: \"id required\",\n    1007: \"No record exists with this id\",\n\n}\n\ndef error_response(error_code, http_status):\n    return {\n        \"body\": {\n            \"code\": error_code,\n            \"message\": error_codes.get(error_code),\n            \"data\": {}\n        },\n        \"statusCode\": http_status,\n        \"headers\": {'Content-Type': 'application/json'}\n    }\n\ndef connectToMongo(args,collection):\n    doc = args.get(\"__ow_headers\")\n    mongo = doc.get(\"mongo\")\n    mongo = mongo.split(\"=\")\n    mongo = mongo.__getitem__(1)\n    mongo_connect_url = mongo.split(\",\")\n    mongo_connect_url = mongo_connect_url.__getitem__(0)\n    try:\n        database = pymongo.MongoClient(mongo_connect_url)\n    except:\n        return error_response(500, \"cannot connnect to mongodb\")\n    database=database.get_database()\n    connect=database[collection]\n    return connect\n\ndef success_response(data, status_code):\n    return {\n        \"body\": {\n        \"code\": 0,\n        \"message\": \"Request Completed Successfully\",\n        \"data\": data\n        },\n        \"statusCode\": status_code,\n        \"headers\": {'Content-Type': 'application/json'}\n        }\n\ndef main(args):\n    collection=connectToMongo(args,\"ETL_analytics_farmSimulation\")\n    data={}\n    farm_id=str(args.get(\"FarmId\"))\n    availableAttributes=[\"SoilMoisture\"]\n    data[\"availableAttributes\"]=availableAttributes\n    data[\"units\"]=[\"C\"]\n    chartData=[]\n    data[\"chartData\"]=chartData\n    print(\"farmid=====\"+farm_id)\n    time=collection.find({\"FarmId\":farm_id}).distinct(\"TimeStamp\")\n    time.sort(reverse = True)\n    time=time[0:120]\n    time.sort()\n    print(time)\n    for i in time:\n      for j in collection.find({\"FarmId\":farm_id,\"TimeStamp\":i}).limit(1):\n        dic={}\n        dic[\"SoilMoisture\"]=j.get(\"SoilMoisture\")\n        dic[\"timestamp\"]=j.get(\"TimeStamp\")\n        chartData.append(dic)\n    return success_response(data, 200)
